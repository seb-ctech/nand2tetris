class Square {

   field int x, y; // screen location of the square's top-left corner
   field int xsize, ysize; // length of this square, in pixels

   /** Constructs a new square with a given location and size. */
   constructor Square new(int Ax, int Ay, int _xsize, int _ysize) {
      let x = Ax;
      let y = Ay;
      let xsize = _xsize;
      let ysize = _ysize;
      return this;
   }

   method int getX(){ return x; }
   method int getY(){ return y; }
   method int getSizeX(){ return xsize; }
   method int getSizeY() { return ysize; }
   method int getRight(){ return x + xsize; }
   method int getBottom(){ return y + ysize; }

   /** Disposes this square. */
   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   /** Draws the square on the screen. */
   method void draw() {
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + xsize, y + ysize);
      return;
   }

   //FIXME: Not working properly
   method int keepOnScreen(int a) {
      var int maxX, minX;
      let maxX = Math.max(a, 0);
      let minX = Math.min( (maxX + xsize), 512);
      return minX;
   }

   method void setPosition(int _x, int _y) {
      let x = _x;
      let y = _y;
      return;
   }

   method void setWidth(int _w){
      let xsize = _w;
      return;
   }

   method boolean collides(Square other){

      var int leftA, leftB, rightA, rightB, topA, topB, bottomA, bottomB;
      let leftA = x;
      let leftB = other.getX();
      let rightA = x + xsize;
      let rightB = leftB + other.getSizeX();
      let topA = y;
      let topB = other.getY();
      let bottomA = y + ysize;
      let bottomB = topB + other.getSizeY();

      return ( (leftA < rightB) & (rightA > leftB) & (topA < bottomB) & (bottomA > topB) );

   }
}
